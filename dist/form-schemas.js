"use strict";var M=Object.create;var d=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var x=(e,a)=>{for(var n in a)d(e,n,{get:a[n],enumerable:!0})},u=(e,a,n,o)=>{if(a&&typeof a=="object"||typeof a=="function")for(let t of N(a))!I.call(e,t)&&t!==n&&d(e,t,{get:()=>a[t],enumerable:!(o=A(a,t))||o.enumerable});return e};var g=(e,a,n)=>(n=e!=null?M(E(e)):{},u(a||!e||!e.__esModule?d(n,"default",{value:e,enumerable:!0}):n,e)),f=e=>u(d({},"__esModule",{value:!0}),e);var v={};x(v,{dateOlderThanEighteenYearsSchema:()=>_,formValidationRules:()=>S,generateFileSchema:()=>O,generateMultiFileSchema:()=>b});module.exports=f(v);var C={pdf:"application/pdf",jpg:"image/jpg",jpeg:"image/jpeg",png:"image/png"},c=e=>e.map(a=>C[a]);var p=[{name:"Alabama",code:"AL"},{name:"Alaska",code:"AK"},{name:"Arizona",code:"AZ"},{name:"Arkansas",code:"AR"},{name:"California",code:"CA"},{name:"Colorado",code:"CO"},{name:"Connecticut",code:"CT"},{name:"Delaware",code:"DE"},{name:"Florida",code:"FL"},{name:"Georgia",code:"GA"},{name:"Hawaii",code:"HI"},{name:"Idaho",code:"ID"},{name:"Illinois",code:"IL"},{name:"Indiana",code:"IN"},{name:"Iowa",code:"IA"},{name:"Kansas",code:"KS"},{name:"Kentucky",code:"KY"},{name:"Louisiana",code:"LA"},{name:"Maine",code:"ME"},{name:"Maryland",code:"MD"},{name:"Massachusetts",code:"MA"},{name:"Michigan",code:"MI"},{name:"Minnesota",code:"MN"},{name:"Mississippi",code:"MS"},{name:"Missouri",code:"MO"},{name:"Montana",code:"MT"},{name:"Nebraska",code:"NE"},{name:"Nevada",code:"NV"},{name:"New Hampshire",code:"NH"},{name:"New Jersey",code:"NJ"},{name:"New Mexico",code:"NM"},{name:"New York",code:"NY"},{name:"North Carolina",code:"NC"},{name:"North Dakota",code:"ND"},{name:"Ohio",code:"OH"},{name:"Oklahoma",code:"OK"},{name:"Oregon",code:"OR"},{name:"Pennsylvania",code:"PA"},{name:"Rhode Island",code:"RI"},{name:"South Carolina",code:"SC"},{name:"South Dakota",code:"SD"},{name:"Tennessee",code:"TN"},{name:"Texas",code:"TX"},{name:"Utah",code:"UT"},{name:"Vermont",code:"VT"},{name:"Virginia",code:"VA"},{name:"Washington",code:"WA"},{name:"West Virginia",code:"WV"},{name:"Wisconsin",code:"WI"},{name:"Wyoming",code:"WY"}],y=[p[0].code,...p.slice(1).map(({code:e})=>e)],D=p.map(({name:e,code:a})=>({label:e,value:a}));var l=g(require("dayjs")),r=g(require("zod")),s="This field is required",i=r.default.string().min(1,s),T=r.default.string({required_error:s}).min(8,"At least 8 characters are required").regex(/[a-z]/,{message:"At least one lowercase letter is required"}).regex(/[A-Z]/,{message:"At least one uppercase letter is required"}).regex(/\d/,{message:"At least one number is required"}),S={email:r.default.string({required_error:s}).email("Please provide a valid email"),password:T,confirm_password:T,firstName:i,lastName:i,netWorth:i,netIncome:i,employerName:i,occupation:i,industry:i,birthCountry:i,citizenshipCountry:i,visaType:i,middleName:r.default.string().optional(),referralCode:r.default.string().regex(/^[a-zA-Z0-9]{6}$/,{message:"Invalid referral code"}),date:r.default.string({required_error:s}).regex(/^(\d{2})\/(\d{2})\/(\d{4})$/),phoneNumber:r.default.string().regex(/^\d{10}$/,{message:"Invalid phone number"}),authenticationCode:r.default.string({required_error:s}).regex(/^\d{6}$/,{message:"Invalid authentication code"}),socialSecurityNumber:r.default.string().regex(/^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$/,{message:"Invalid Social Security Number"}),ein:r.default.string().regex(/^[0-9]{3}-[0-9]{6}/,{message:"Invalid EIN"}),address:r.default.object({addressLine1:i,addressLine2:r.default.string().nullable(),city:i,state:r.default.enum(y),zip:r.default.string().regex(/^\d{5}(?:[-\s]\d{4})?$/,{message:"Invalid zip code"})})},O=(e,a)=>{let n=a*1048576;return r.default.custom().refine(o=>!!o,"The field is required").refine(o=>(o==null?void 0:o.size)<=n,`File size must be smaller than ${a}MB`).refine(o=>{let t=c(e),m=o==null?void 0:o.type;return t.includes(m)},"File type not supported")},b=(e,a)=>{let n=a*1048576;return r.default.custom().array().refine(o=>o.every(t=>t.size<=n),`File size must be smaller than ${a}MB`).refine(o=>{let t=c(e);return o.every(m=>t.includes(m.type))},"File type not supported")},_=S.date.superRefine((e,a)=>{let n={today:(0,l.default)(),dateOfBirth:(0,l.default)(e)},o=n.today.subtract(18,"year");n.dateOfBirth.isBefore(o)||a.addIssue({code:"invalid_date",message:"You must be at least 18 years old to use this service.",path:["dateOfBirth"]})});0&&(module.exports={dateOlderThanEighteenYearsSchema,formValidationRules,generateFileSchema,generateMultiFileSchema});
